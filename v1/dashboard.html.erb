<!DOCTYPE html>

<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>PSI Dashboard</title>

  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">

  <style>
    html {
      box-sizing: border-box;
    }

    *, *:before, *:after {
      box-sizing: inherit;
    }

    body {
      font-family: 'Roboto', sans-serif;
    }

    .app {
      width: 960px;
      margin: 0 auto;
      padding: 30px 0;
    }

    .app__urls-table {
      margin-bottom: 40px;
    }

    .metric-charts__current-url {
      font-size: 24px;
      line-height: 32px;
    }

    .metric-charts__header {
      margin-bottom: 40px;
    }

    .metric-charts__report {
      display: flex;
      justify-content: space-between;
    }

    .apex-chart {
      width: 475px;
      padding: 10px;
      margin-bottom: 10px;

      border: 1px solid #E4E4E4;
      border-radius: 2px;
    }


    .urls-table {
      border-collapse: collapse;
      table-layout: fixed;
      width: 100%;

      border-radius: 2px;
    }

    .urls-table,
    .urls-table th,
    .urls-table td {
      border: 1px solid #E4E4E4;
    }

    .urls-table th:first-child {
      width: 300px;
    }

    .urls-table th {
      padding: 5px 0;

      font-size: 12px;
      line-height: 14px;
      text-align: center;
    }

    .urls-table td {
      width: 20px;
      padding: 5px;
    }

    .urls-table td:not(:first-child) {
      text-align: center;
    }

    .urls-table__url {
      font-size: 14px;
      line-height: 18px;

      word-wrap: break-word;
    }

    .urls-table__row:hover td {
      opacity: 0.9;
    }

    .urls-table__metric-name,
    .urls-table__row {
      cursor: pointer;
    }

    .urls-table__open-psi-report {
      display: inline-block;
      width: 10px;
      height: 10px;

      background: url("./icons/external-link.svg");
      background-size: contain;
      background-repeat: no-repeat;
    }

    /* Since apex charts doesn't support showing toolbar on hover
    let's make a hack: */
    .apexcharts-toolbar {
      display: none !important;
    }

    .apex-chart:hover .apexcharts-toolbar {
      display: flex !important;
    }

    .urls-table__metric-value--fast {
      background-color: #178239;
    }

    .urls-table__metric-value--average {
      background-color: #e67700;
    }

    .urls-table__metric-value--slow {
      background-color: #c7221f;
    }

    .metric-charts__device-type {
      position: relative;
      padding-left: 30px;

      margin-bottom: 20px;

      font-size: 18px;
      line-height: 18px;
    }

    .metric-charts__device-type--mobile:before {
      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 25px;
      height: 25px;

      background: url("./icons/mobile.svg");
      background-size: contain;
      background-repeat: no-repeat;

      content: "";
    }

    .metric-charts__device-type--desktop:before {
      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 25px;
      height: 25px;

      background: url("./icons/desktop.svg");
      background-size: contain;
      background-repeat: no-repeat;

      content: "";
    }

    .header {
      padding: 15px 0;

      background-color: #3f85f7;
    }

    .header__container {
      width: 960px;
      margin: 0 auto;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .header__menu {
      display: block;

      list-style: none;
    }
  </style>
</head>

<body>
  <header class="header">
    <div class="header__container">
      <div class="header__logo">
        PSI Dashboard
      </div>

      <ul class="header__menu">
        <li>
          <a href="https://github.com/makaroni4/page_speed_insights_dashboard">Github repo</a>
        </li>
      </ul>
    </div>
  </header>

  <div id="app" class="app">
    <div class="app__urls-table">
      <urls-table></urls-table>
    </div>

    <div class="app__charts">
      <metric-charts></metric-charts>
    </div>
  </div>

  <template id="urls-table">
    <table class="urls-table">
      <thead>
        <tr>
          <th rowspan="2">URL</th>

          <th colspan="5">Mobile</th>

          <th colspan="5">Desktop</th>
        </tr>

        <tr>
          <th class="urls-table__metric-name" v-on:click="sortBy('mobile', 'speed_index')">Speed Index</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('mobile', 'first_contentful_paint')">First Contentful Paint</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('mobile', 'time_to_interactive')">Time To Interactive</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('mobile', 'first_meaningful_paint')">First Meaningful Paint</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('mobile', 'first_cpu_idle')">First CPU Idle</th>

          <th class="urls-table__metric-name" v-on:click="sortBy('desktop', 'speed_index')">Speed Index</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('desktop', 'first_contentful_paint')">First Contentful Paint</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('desktop', 'time_to_interactive')">Time To Interactive</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('desktop', 'first_meaningful_paint')">First Meaningful Paint</th>
          <th class="urls-table__metric-name" v-on:click="sortBy('desktop', 'first_cpu_idle')">First CPU Idle</th>
        </tr>
      </thead>

      <tbody>
        <tr v-for="url in urls" v-on:click="setCurrentUrl(url)" class="urls-table__row">
          <td class="urls-table__url">
            {{ url }}

            <a class="urls-table__open-psi-report" v-bind:href="PSIUrl(currentUrl)" target="_blank"></a>
          </td>

          <td v-for="metric in metrics" v-bind:class="tdClass(url, 'mobile')">
            {{ latestMetric(url, "mobile", metric) }}
          </td>

          <td v-for="metric in metrics" v-bind:class="tdClass(url, 'desktop')">
            {{ latestMetric(url, "desktop", metric) }}
          </td>
        </tr>
      </tbody>
    </table>
  </template>

  <template id="metric-charts">
    <div class="metric-charts">
      <div class="metric-charts__header">
        <div class="metric-charts__current-url">
          {{ currentUrl }}
        </div>
      </div>

      <div class="metric-charts__report">
        <div class="metric-charts__column">
          <div class="metric-charts__device-type metric-charts__device-type--mobile">
            Mobile
          </div>

          <div class="metric-charts__charts" data-device-type="mobile">
          </div>
        </div>

        <div class="metric-charts__column">
          <div class="metric-charts__device-type metric-charts__device-type--desktop">
            Desktop
          </div>

          <div class="metric-charts__charts" data-device-type="desktop">
          </div>
        </div>
      </div>
    </div>
  </template>

  <script src="https://unpkg.com/vue"></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts@latest"></script>

  <script>
    window.Apex = {
      chart: {
        height: 250,
        fontFamily: 'Roboto, sans-serif'
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        curve: 'straight'
      },
      toolbar: {
        tools: {
          selection: false
        }
      },
      markers: {
        size: 6,
        hover: {
          size: 10
        }
      },
      tooltip: {
        followCursor: false,
        theme: 'dark',
        x: {
          show: false
        },
        marker: {
          show: false
        },
        y: {
          title: {
            formatter: function() {
              return ''
            }
          }
        }
      },
      grid: {
        clipMarkers: false
      },
      yaxis: {
        tickAmount: 4
      },
      xaxis: {
        type: 'datetime'
      },
    }
  </script>

  <script>
    var reportData = <%= psi_data.to_json %>;
  </script>

  <script>
    var globalData = {
      urls: Object.keys(reportData),
      reportData: reportData,
      currentUrl: Object.keys(reportData)[0],
      deviceTypes: [
        "mobile",
        "desktop"
      ],
      metrics: [
        "speed_index",
        "first_contentful_paint",
        "time_to_interactive",
        "first_meaningful_paint",
        "first_cpu_idle"
      ],
      chartOptions: {
        speed_index: {
          title: {
            text: "Speed Index",
            align: "left"
          },
          yaxis: {
            min: 0,
            max: 100
          }
        },
        first_contentful_paint: {
          title: {
            text: "First Contentful Paint",
            align: "left"
          }
        },
        time_to_interactive: {
          title: {
            text: "Time to Interactive",
            align: "left"
          }
        },
        first_meaningful_paint: {
          title: {
            text: "First Meaningful Paint",
            align: "left"
          }
        },
        first_cpu_idle: {
          title: {
            text: "First CPU Idle",
            align: "left"
          }
        }
      },
      sortDirection: 1
    };

    Vue.component('urls-table', {
      template: '#urls-table',
      data: function() {
        return globalData
      },
      methods: {
        PSIUrl(url) {
          return `https://developers.google.com/speed/pagespeed/insights/?url=${url}`;
        },
        speedIndexScale(url, deviceType) {
          var latestSpeedIndex = this.latestMetric(url, deviceType, "speed_index");

          if(latestSpeedIndex > 89) {
            return "fast";
          } else if (latestSpeedIndex > 49) {
            return "average";
          } else {
            return "slow";
          }
        },
        setCurrentUrl(url) {
          this.currentUrl = url;
        },
        latestMetric(url, deviceType, metricName) {
          var urlData = this.reportData[url][deviceType];

          var latestTimestamp = Object.keys(urlData).sort(function(a, b){
            return new Date(b) - new Date(a);
          })[0];

          return urlData[latestTimestamp][metricName];
        },
        sortBy(deviceType, metric, sortDirection = this.sortDirection) {
          this.urls.sort((a, b) => sortDirection * (this.latestMetric(b, deviceType, metric) - this.latestMetric(a, deviceType, metric)));
          this.sortDirection *= -1;
        },
        tdClass(url, deviceType) {
          return "urls-table__metric-value urls-table__metric-value--" + this.speedIndexScale(url, deviceType)
        }
      },
      mounted() {
        this.sortBy("mobile", "speed_index", -1);
      }
    });

    Vue.component('metric-charts', {
      template: '#metric-charts',
      data: function() {
        return globalData
      },
      methods: {
        plotCharts(deviceType) {
          var url = this.currentUrl;
          var metrics = this.metrics;
          var urlReport = this.reportData[url];
          var $charts = document.querySelector(`.metric-charts__charts[data-device-type="${deviceType}"]`);
          var chartOptions = this.chartOptions;

          var maxValue = function(deviceType, metric) {
            var values = Object.keys(urlReport[deviceType]).map(function(timestamp) {
              return urlReport[deviceType][timestamp][metric];
            });

            return Math.max(...values);
          };

          var outputDeviceMetric = function(deviceType, metric) {
            var timeline = Object.keys(urlReport[deviceType]).map(function(timestamp) {
              return [new Date(timestamp), urlReport[deviceType][timestamp][metric]];
            });

            var optionsLine = {
              chart: {
                id: deviceType + '-' + metric,
                type: 'line',
                toolbar: {
                  show: true,
                  tools: {
                    download: true,
                    selection: false,
                    zoom: true,
                    zoomin: false,
                    zoomout: false,
                    pan: false,
                    reset: true
                  }
                }
              },
              title: {
                text: deviceType + ' - ' + metric
              },
              colors: ['#008FFB'],
              series: [{
                data: timeline
              }],
              yaxis: {
                min: 0,
                max: maxValue(deviceType, metric) + 1,
                labels: {
                  minWidth: 40
                },
                decimalsInFloat: 1
              }
            };

            if(chartOptions[metric]) {
              optionsLine = {
                ...optionsLine,
                ...chartOptions[metric]
              }
            }

            var $chartContainer = document.querySelector(`.apex-chart[data-device-type="${deviceType}"][data-metric="${metric}"]`);

            $chart = document.createElement('div');

            if($chartContainer) {
              $chartContainer.innerHTML = '';
            } else {
              $chartContainer = document.createElement('div');
              $chartContainer.className = "apex-chart";
              $chartContainer.setAttribute('data-device-type', deviceType);
              $chartContainer.setAttribute('data-metric', metric);
              $charts.appendChild($chartContainer);
            }

            $chartContainer.appendChild($chart);

            var chartLine = new ApexCharts(
              $chart,
              optionsLine
            );

            chartLine.render();
          }

          metrics.forEach(function(metric) {
            outputDeviceMetric(deviceType, metric);
          });
        },
        plotUrlData() {
          this.plotCharts("mobile");
          this.plotCharts("desktop");
        }
      },
      watch: {
      	currentUrl: function() {
          this.plotUrlData();
        }
      },
      mounted() {
        this.plotUrlData();
      }
    });

    new Vue({
      el: '#app',
      data: globalData
    });
  </script>
</body>

</html>
