<!DOCTYPE html>

<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>PSI Dashboard</title>
</head>

<body>
  <div id="app">
    <urls-list></urls-list>

    <apex-chart></apex-chart>
  </div>

  <template id="urls-list">
    <ul>
      <li v-for="(urlData, url) in urls">
        <div v-if="url === currentUrl">
          {{ url }}
        </div>

        <div v-else>
          <a href="#" v-on:click="setCurrentUrl(url)">{{ url }}</a>
        </div>
      </li>
    </ul>
  </template>

  <template id="apex-chart">
    <div class="apex-chart-container">
    </div>
  </template>

  <script src="https://unpkg.com/vue"></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts@latest"></script>

  <script>
    var reportData = <%= psi_data.to_json %>;
  </script>

  <script>
    var globalData = {
      urls: reportData,
      currentUrl: Object.keys(reportData)[0]
    };

    Vue.component('urls-list', {
      template: '#urls-list',
      data: function() {
        return globalData
      },
      methods: {
        setCurrentUrl(url) {
          this.currentUrl = url;
        }
      }
    });

    Vue.component('apex-chart', {
      template: '#apex-chart',
      data: function() {
        return globalData
      },
      methods: {
        plotUrlData() {
          window.Apex = {
            chart: {
              height: 160,
            },
            dataLabels: {
              enabled: false
            },
            stroke: {
              curve: 'straight'
            },
            toolbar: {
              tools: {
                selection: false
              }
            },
            markers: {
              size: 6,
              hover: {
                size: 10
              }
            },
            tooltip: {
              followCursor: false,
              theme: 'dark',
              x: {
                show: false
              },
              marker: {
                show: false
              },
              y: {
                title: {
                  formatter: function() {
                    return ''
                  }
                }
              }
            },
            grid: {
              clipMarkers: false
            },
            yaxis: {
              tickAmount: 2
            },
            xaxis: {
              type: 'datetime'
            },
          }

          var url = this.currentUrl;
          var urlReport = this.urls[url];
          var deviceTypes = ["mobile", "desktop"];
          var $charts = document.querySelector(".apex-chart-container");

          $charts.innerHTML = "";

          deviceTypes.forEach(function(deviceType) {
            var metrics = [
              "speed_index",
              "first_contentful_paint",
              "time_to_interactive",
              "first_meaningful_paint",
              "first_cpu_idle"
            ];

            metrics.forEach(function(metric) {
              var timeline = Object.keys(urlReport[deviceType]).map(function(timestamp) {
                return [new Date(timestamp), urlReport[deviceType][timestamp][metric]];
              });

              var optionsLine = {
                chart: {
                  id: deviceType + '-' + metric,
                  group: url,
                  type: 'line',
                },
                title: {
                  text: deviceType + ' - ' + metric
                },
                colors: ['#008FFB'],
                series: [{
                  data: timeline
                }],
                yaxis: {
                  labels: {
                    minWidth: 40
                  }
                }
              }

              var $chartContainer = document.createElement('div');

              $charts.appendChild($chartContainer);

              var chartLine = new ApexCharts(
                $chartContainer,
                optionsLine
              );

              chartLine.render();
            });
          });
        }
      },
      watch: {
      	currentUrl: function() {
          this.plotUrlData();
        }
      },
      mounted() {
        this.plotUrlData();
      }
    });

    new Vue({
      el: '#app',
      data: globalData
    });
  </script>
</body>

</html>
